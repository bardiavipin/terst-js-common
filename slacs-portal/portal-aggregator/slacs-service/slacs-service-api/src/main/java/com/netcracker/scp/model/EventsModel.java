/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.netcracker.scp.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.GroupedModel;
import com.liferay.portal.kernel.model.ShardedModel;
import com.liferay.portal.kernel.model.StagedAuditedModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the Events service. Represents a row in the &quot;Portlets_Events&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.netcracker.scp.model.impl.EventsModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.netcracker.scp.model.impl.EventsImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see Events
 * @see com.netcracker.scp.model.impl.EventsImpl
 * @see com.netcracker.scp.model.impl.EventsModelImpl
 * @generated
 */
@ProviderType
public interface EventsModel extends BaseModel<Events>, GroupedModel,
	ShardedModel, StagedAuditedModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a events model instance should use the {@link Events} interface instead.
	 */

	/**
	 * Returns the primary key of this events.
	 *
	 * @return the primary key of this events
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this events.
	 *
	 * @param primaryKey the primary key of this events
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this events.
	 *
	 * @return the uuid of this events
	 */
	@AutoEscape
	@Override
	public String getUuid();

	/**
	 * Sets the uuid of this events.
	 *
	 * @param uuid the uuid of this events
	 */
	@Override
	public void setUuid(String uuid);

	/**
	 * Returns the event ID of this events.
	 *
	 * @return the event ID of this events
	 */
	public long getEventId();

	/**
	 * Sets the event ID of this events.
	 *
	 * @param eventId the event ID of this events
	 */
	public void setEventId(long eventId);

	/**
	 * Returns the lab ID of this events.
	 *
	 * @return the lab ID of this events
	 */
	public long getLabId();

	/**
	 * Sets the lab ID of this events.
	 *
	 * @param labId the lab ID of this events
	 */
	public void setLabId(long labId);

	/**
	 * Returns the group ID of this events.
	 *
	 * @return the group ID of this events
	 */
	@Override
	public long getGroupId();

	/**
	 * Sets the group ID of this events.
	 *
	 * @param groupId the group ID of this events
	 */
	@Override
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this events.
	 *
	 * @return the company ID of this events
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this events.
	 *
	 * @param companyId the company ID of this events
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the user ID of this events.
	 *
	 * @return the user ID of this events
	 */
	@Override
	public long getUserId();

	/**
	 * Sets the user ID of this events.
	 *
	 * @param userId the user ID of this events
	 */
	@Override
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this events.
	 *
	 * @return the user uuid of this events
	 */
	@Override
	public String getUserUuid();

	/**
	 * Sets the user uuid of this events.
	 *
	 * @param userUuid the user uuid of this events
	 */
	@Override
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this events.
	 *
	 * @return the user name of this events
	 */
	@AutoEscape
	@Override
	public String getUserName();

	/**
	 * Sets the user name of this events.
	 *
	 * @param userName the user name of this events
	 */
	@Override
	public void setUserName(String userName);

	/**
	 * Returns the create date of this events.
	 *
	 * @return the create date of this events
	 */
	@Override
	public Date getCreateDate();

	/**
	 * Sets the create date of this events.
	 *
	 * @param createDate the create date of this events
	 */
	@Override
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this events.
	 *
	 * @return the modified date of this events
	 */
	@Override
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this events.
	 *
	 * @param modifiedDate the modified date of this events
	 */
	@Override
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the title of this events.
	 *
	 * @return the title of this events
	 */
	@AutoEscape
	public String getTitle();

	/**
	 * Sets the title of this events.
	 *
	 * @param title the title of this events
	 */
	public void setTitle(String title);

	/**
	 * Returns the description of this events.
	 *
	 * @return the description of this events
	 */
	@AutoEscape
	public String getDescription();

	/**
	 * Sets the description of this events.
	 *
	 * @param description the description of this events
	 */
	public void setDescription(String description);

	/**
	 * Returns the start time of this events.
	 *
	 * @return the start time of this events
	 */
	public Date getStartTime();

	/**
	 * Sets the start time of this events.
	 *
	 * @param startTime the start time of this events
	 */
	public void setStartTime(Date startTime);

	/**
	 * Returns the end time of this events.
	 *
	 * @return the end time of this events
	 */
	public Date getEndTime();

	/**
	 * Sets the end time of this events.
	 *
	 * @param endTime the end time of this events
	 */
	public void setEndTime(Date endTime);

	/**
	 * Returns the activity type of this events.
	 *
	 * @return the activity type of this events
	 */
	@AutoEscape
	public String getActivityType();

	/**
	 * Sets the activity type of this events.
	 *
	 * @param activityType the activity type of this events
	 */
	public void setActivityType(String activityType);

	/**
	 * Returns the full day of this events.
	 *
	 * @return the full day of this events
	 */
	public boolean getFullDay();

	/**
	 * Returns <code>true</code> if this events is full day.
	 *
	 * @return <code>true</code> if this events is full day; <code>false</code> otherwise
	 */
	public boolean isFullDay();

	/**
	 * Sets whether this events is full day.
	 *
	 * @param fullDay the full day of this events
	 */
	public void setFullDay(boolean fullDay);

	/**
	 * Returns the portal user of this events.
	 *
	 * @return the portal user of this events
	 */
	@AutoEscape
	public String getPortalUser();

	/**
	 * Sets the portal user of this events.
	 *
	 * @param portalUser the portal user of this events
	 */
	public void setPortalUser(String portalUser);

	/**
	 * Returns the portal pass of this events.
	 *
	 * @return the portal pass of this events
	 */
	@AutoEscape
	public String getPortalPass();

	/**
	 * Sets the portal pass of this events.
	 *
	 * @param portalPass the portal pass of this events
	 */
	public void setPortalPass(String portalPass);

	/**
	 * Returns the nc user of this events.
	 *
	 * @return the nc user of this events
	 */
	@AutoEscape
	public String getNcUser();

	/**
	 * Sets the nc user of this events.
	 *
	 * @param ncUser the nc user of this events
	 */
	public void setNcUser(String ncUser);

	/**
	 * Returns the nc pass of this events.
	 *
	 * @return the nc pass of this events
	 */
	@AutoEscape
	public String getNcPass();

	/**
	 * Sets the nc pass of this events.
	 *
	 * @param ncPass the nc pass of this events
	 */
	public void setNcPass(String ncPass);

	/**
	 * Returns the status of this events.
	 *
	 * @return the status of this events
	 */
	public int getStatus();

	/**
	 * Sets the status of this events.
	 *
	 * @param status the status of this events
	 */
	public void setStatus(int status);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(Events events);

	@Override
	public int hashCode();

	@Override
	public CacheModel<Events> toCacheModel();

	@Override
	public Events toEscapedModel();

	@Override
	public Events toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}